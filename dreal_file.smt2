(set-logic QF_NRA)
(declare-fun v0 () Real)
(declare-fun th0 () Real)
(declare-fun zp_0_0 () Real)
(declare-fun zp_0_31 () Real)
(declare-fun v13 () Real)
(declare-fun th13 () Real)
(declare-fun zp_13_13 () Real)
(declare-fun zp_13_59 () Real)
(declare-fun v14 () Real)
(declare-fun th14 () Real)
(declare-fun zp_14_33 () Real)
(declare-fun v25 () Real)
(declare-fun th25 () Real)
(declare-fun v31 () Real)
(declare-fun th31 () Real)
(declare-fun zp_31_31 () Real)
(declare-fun zp_31_40 () Real)
(declare-fun v33 () Real)
(declare-fun th33 () Real)
(declare-fun zp_33_33 () Real)
(declare-fun zp_33_46 () Real)
(declare-fun v34 () Real)
(declare-fun th34 () Real)
(declare-fun v40 () Real)
(declare-fun th40 () Real)
(declare-fun zp_40_40 () Real)
(declare-fun zp_40_47 () Real)
(declare-fun v45 () Real)
(declare-fun th45 () Real)
(declare-fun v46 () Real)
(declare-fun th46 () Real)
(declare-fun zp_46_13 () Real)
(declare-fun zp_46_46 () Real)
(declare-fun v47 () Real)
(declare-fun th47 () Real)
(declare-fun v54 () Real)
(declare-fun th54 () Real)
(declare-fun v56 () Real)
(declare-fun th56 () Real)
(declare-fun v57 () Real)
(declare-fun th57 () Real)
(declare-fun v59 () Real)
(declare-fun th59 () Real)
(declare-fun zp_59_0 () Real)
(declare-fun zp_59_59 () Real)
(declare-fun v64 () Real)
(declare-fun th64 () Real)
(declare-fun v76 () Real)
(declare-fun th76 () Real)
(declare-fun v77 () Real)
(declare-fun th77 () Real)
(declare-fun v79 () Real)
(declare-fun th79 () Real)
(declare-fun v84 () Real)
(declare-fun th84 () Real)
(declare-fun v88 () Real)
(declare-fun th88 () Real)
(declare-fun v101 () Real)
(declare-fun th101 () Real)
(declare-fun v112 () Real)
(declare-fun th112 () Real)
(declare-fun v130 () Real)
(declare-fun th130 () Real)
(declare-fun v137 () Real)
(declare-fun th137 () Real)
(declare-fun v138 () Real)
(declare-fun th138 () Real)
(declare-fun v149 () Real)
(declare-fun th149 () Real)
(assert (<= v0 2))
(assert (>= v0 0))
(assert (<= th0 2))
(assert (>= th0 -2))
(assert (<= zp_0_0 3))
(assert (>= zp_0_0 -3))
(assert (<= zp_0_31 3))
(assert (>= zp_0_31 -3))
(assert (<= v13 2))
(assert (>= v13 0))
(assert (<= th13 2))
(assert (>= th13 -2))
(assert (<= zp_13_13 3))
(assert (>= zp_13_13 -3))
(assert (<= zp_13_59 3))
(assert (>= zp_13_59 -3))
(assert (<= v14 2))
(assert (>= v14 0))
(assert (<= th14 2))
(assert (>= th14 -2))
(assert (<= zp_14_33 3))
(assert (>= zp_14_33 -3))
(assert (<= v25 2))
(assert (>= v25 0))
(assert (<= th25 2))
(assert (>= th25 -2))
(assert (<= v31 2))
(assert (>= v31 0))
(assert (<= th31 2))
(assert (>= th31 -2))
(assert (<= zp_31_31 3))
(assert (>= zp_31_31 -3))
(assert (<= zp_31_40 3))
(assert (>= zp_31_40 -3))
(assert (<= v33 2))
(assert (>= v33 0))
(assert (<= th33 2))
(assert (>= th33 -2))
(assert (<= zp_33_33 3))
(assert (>= zp_33_33 -3))
(assert (<= zp_33_46 3))
(assert (>= zp_33_46 -3))
(assert (<= v34 2))
(assert (>= v34 0))
(assert (<= th34 2))
(assert (>= th34 -2))
(assert (<= v40 2))
(assert (>= v40 0))
(assert (<= th40 2))
(assert (>= th40 -2))
(assert (<= zp_40_40 3))
(assert (>= zp_40_40 -3))
(assert (<= zp_40_47 3))
(assert (>= zp_40_47 -3))
(assert (<= v45 2))
(assert (>= v45 0))
(assert (<= th45 2))
(assert (>= th45 -2))
(assert (<= v46 2))
(assert (>= v46 0))
(assert (<= th46 2))
(assert (>= th46 -2))
(assert (<= zp_46_13 3))
(assert (>= zp_46_13 -3))
(assert (<= zp_46_46 3))
(assert (>= zp_46_46 -3))
(assert (<= v47 2))
(assert (>= v47 0))
(assert (<= th47 2))
(assert (>= th47 -2))
(assert (<= v54 2))
(assert (>= v54 0))
(assert (<= th54 2))
(assert (>= th54 -2))
(assert (<= v56 2))
(assert (>= v56 0))
(assert (<= th56 2))
(assert (>= th56 -2))
(assert (<= v57 2))
(assert (>= v57 0))
(assert (<= th57 2))
(assert (>= th57 -2))
(assert (<= v59 2))
(assert (>= v59 0))
(assert (<= th59 2))
(assert (>= th59 -2))
(assert (<= zp_59_0 3))
(assert (>= zp_59_0 -3))
(assert (<= zp_59_59 3))
(assert (>= zp_59_59 -3))
(assert (<= v64 2))
(assert (>= v64 0))
(assert (<= th64 2))
(assert (>= th64 -2))
(assert (<= v76 2))
(assert (>= v76 0))
(assert (<= th76 2))
(assert (>= th76 -2))
(assert (<= v77 2))
(assert (>= v77 0))
(assert (<= th77 2))
(assert (>= th77 -2))
(assert (<= v79 2))
(assert (>= v79 0))
(assert (<= th79 2))
(assert (>= th79 -2))
(assert (<= v84 2))
(assert (>= v84 0))
(assert (<= th84 2))
(assert (>= th84 -2))
(assert (<= v88 2))
(assert (>= v88 0))
(assert (<= th88 2))
(assert (>= th88 -2))
(assert (<= v101 2))
(assert (>= v101 0))
(assert (<= th101 2))
(assert (>= th101 -2))
(assert (<= v112 2))
(assert (>= v112 0))
(assert (<= th112 2))
(assert (>= th112 -2))
(assert (<= v130 2))
(assert (>= v130 0))
(assert (<= th130 2))
(assert (>= th130 -2))
(assert (<= v137 2))
(assert (>= v137 0))
(assert (<= th137 2))
(assert (>= th137 -2))
(assert (<= v138 2))
(assert (>= v138 0))
(assert (<= th138 2))
(assert (>= th138 -2))
(assert (<= v149 2))
(assert (>= v149 0))
(assert (<= th149 2))
(assert (>= th149 -2))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and true (= zp_14_33 (- (- (* (^ v14 2) 0.105394) (* v14 (* v33 (* 0.105394 (cos (- th14 th33)))))) (* v14 (* v33 (* 0.031284 (sin (- th14 th33)))))))) (= zp_33_33 (* v33 (+ (+ (+ (+ (+ 0 (* v14 (- (- 0 (* 0.105394 (cos (- th33 th14)))) (* 0.031284 (sin (- th33 th14)))))) (* v46 (- (- 0 (* 0.153099 (cos (- th33 th46)))) (* 0.066600 (sin (- th33 th46)))))) (* v56 (- (- 0 (* 0.112927 (cos (- th33 th56)))) (* 0.170434 (sin (- th33 th56)))))) (* v64 (- (- 0 (* 0.150899 (cos (- th33 th64)))) (* 0.168117 (sin (- th33 th64)))))) (* v88 (- (- 0 (* 0.091591 (cos (- th33 th88)))) (* 0.132205 (sin (- th33 th88))))))))) (= zp_33_46 (- (- (* (^ v33 2) 0.153099) (* v33 (* v46 (* 0.153099 (cos (- th33 th46)))))) (* v33 (* v46 (* 0.066600 (sin (- th33 th46)))))))) (= zp_46_46 (* v46 (+ (+ (+ (+ (+ (+ (+ 0 (* v13 (- (- 0 (* 0.115680 (cos (- th46 th13)))) (* 0.171096 (sin (- th46 th13)))))) (* v25 (- (- 0 (* 0.161025 (cos (- th46 th25)))) (* 0.183852 (sin (- th46 th25)))))) (* v33 (- (- 0 (* 0.153099 (cos (- th46 th33)))) (* 0.066600 (sin (- th46 th33)))))) (* v34 (- (- 0 (* 0.009460 (cos (- th46 th34)))) (* 0.160106 (sin (- th46 th34)))))) (* v54 (- (- 0 (* 0.137246 (cos (- th46 th54)))) (* 0.101420 (sin (- th46 th54)))))) (* v76 (- (- 0 (* 0.149535 (cos (- th46 th76)))) (* 0.180230 (sin (- th46 th76)))))) (* v79 (- (- 0 (* 0.122940 (cos (- th46 th79)))) (* 0.046738 (sin (- th46 th79))))))))) (= zp_46_13 (- (- (* (^ v46 2) 0.115680) (* v46 (* v13 (* 0.115680 (cos (- th46 th13)))))) (* v46 (* v13 (* 0.171096 (sin (- th46 th13)))))))) (= zp_13_13 (* v13 (+ (+ (+ (+ 0 (* v46 (- (- 0 (* 0.115680 (cos (- th13 th46)))) (* 0.171096 (sin (- th13 th46)))))) (* v59 (- (- 0 (* 0.072086 (cos (- th13 th59)))) (* 0.022716 (sin (- th13 th59)))))) (* v77 (- (- 0 (* 0.089191 (cos (- th13 th77)))) (* 0.177258 (sin (- th13 th77)))))) (* v137 (- (- 0 (* 0.052755 (cos (- th13 th137)))) (* 0.198602 (sin (- th13 th137))))))))) (= zp_13_59 (- (- (* (^ v13 2) 0.072086) (* v13 (* v59 (* 0.072086 (cos (- th13 th59)))))) (* v13 (* v59 (* 0.022716 (sin (- th13 th59)))))))) (= zp_59_59 (* v59 (+ (+ (+ (+ 0 (* v0 (- (- 0 (* 0.019584 (cos (- th59 th0)))) (* 0.110805 (sin (- th59 th0)))))) (* v13 (- (- 0 (* 0.072086 (cos (- th59 th13)))) (* 0.022716 (sin (- th59 th13)))))) (* v130 (- (- 0 (* 0.019494 (cos (- th59 th130)))) (* 0.010569 (sin (- th59 th130)))))) (* v138 (- (- 0 (* 0.022593 (cos (- th59 th138)))) (* 0.039627 (sin (- th59 th138))))))))) (= zp_59_0 (- (- (* (^ v59 2) 0.019584) (* v59 (* v0 (* 0.019584 (cos (- th59 th0)))))) (* v59 (* v0 (* 0.110805 (sin (- th59 th0)))))))) (= zp_0_0 (* v0 (+ (+ (+ (+ 0 (* v31 (- (- 0 (* 0.195459 (cos (- th0 th31)))) (* 0.025805 (sin (- th0 th31)))))) (* v57 (- (- 0 (* 0.190284 (cos (- th0 th57)))) (* 0.112575 (sin (- th0 th57)))))) (* v59 (- (- 0 (* 0.019584 (cos (- th0 th59)))) (* 0.110805 (sin (- th0 th59)))))) (* v101 (- (- 0 (* 0.027189 (cos (- th0 th101)))) (* 0.169308 (sin (- th0 th101))))))))) (= zp_0_31 (- (- (* (^ v0 2) 0.195459) (* v0 (* v31 (* 0.195459 (cos (- th0 th31)))))) (* v0 (* v31 (* 0.025805 (sin (- th0 th31)))))))) (= zp_31_31 (* v31 (+ (+ (+ (+ (+ 0 (* v0 (- (- 0 (* 0.195459 (cos (- th31 th0)))) (* 0.025805 (sin (- th31 th0)))))) (* v40 (- (- 0 (* 0.036936 (cos (- th31 th40)))) (* 0.130725 (sin (- th31 th40)))))) (* v45 (- (- 0 (* 0.082885 (cos (- th31 th45)))) (* 0.078848 (sin (- th31 th45)))))) (* v137 (- (- 0 (* 0.148738 (cos (- th31 th137)))) (* 0.160674 (sin (- th31 th137)))))) (* v149 (- (- 0 (* 0.157408 (cos (- th31 th149)))) (* 0.039834 (sin (- th31 th149))))))))) (= zp_31_40 (- (- (* (^ v31 2) 0.036936) (* v31 (* v40 (* 0.036936 (cos (- th31 th40)))))) (* v31 (* v40 (* 0.130725 (sin (- th31 th40)))))))) (= zp_40_40 (* v40 (+ (+ (+ (+ 0 (* v31 (- (- 0 (* 0.036936 (cos (- th40 th31)))) (* 0.130725 (sin (- th40 th31)))))) (* v47 (- (- 0 (* 0.149572 (cos (- th40 th47)))) (* 0.023587 (sin (- th40 th47)))))) (* v84 (- (- 0 (* 0.136623 (cos (- th40 th84)))) (* 0.177139 (sin (- th40 th84)))))) (* v112 (- (- 0 (* 0.069865 (cos (- th40 th112)))) (* 0.021680 (sin (- th40 th112))))))))) (= zp_40_47 (- (- (* (^ v40 2) 0.149572) (* v40 (* v47 (* 0.149572 (cos (- th40 th47)))))) (* v40 (* v47 (* 0.023587 (sin (- th40 th47)))))))))
(check-sat)
(exit)
